{"version":3,"file":"static/js/807.8f5f7f28.chunk.js","mappings":"uKAAO,IAAMA,EAAW,CACtBC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wB,uDCJN,IAAMC,EAAU,WACrBC,OAAOC,SAAS,CACdL,IAAK,EACLC,KAAM,EACNK,SAAU,UAEb,C,wJC6ED,UAhEkB,WAChB,OAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeP,EAAS,WAAWQ,KAAKL,EACzC,GAAE,CAACH,KAEJM,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACXI,YAAW,WACTb,OAAOC,SAAS,CACdL,IAAK,IACLC,KAAM,EACNK,SAAU,WAEZO,GAAW,EACZ,GAAE,IACJ,GAAE,CAACH,IAECA,EAEL,OACE,iCACE,SAAC,KAAD,oBACA,UAAC,IAAD,CAAKQ,GAAG,KAAKC,QAAQ,OAAOC,SAAS,OAAOC,QAAS,GAAIC,GAAG,UAA5D,UACGZ,EAAaa,KAAKC,KACjB,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACE,UAAC,KAAD,WACGF,GACC,SAAC,KAAD,CACEG,IAAKC,EAAAA,GAAaJ,EAClBK,IAAKJ,EACLK,MAAO,IACPC,OAAQ,OAGV,SAAC,KAAD,CAAcJ,IAAKK,EAAkBH,IAAKJ,KAE5C,SAAC,KAAD,UAAiBA,KACjB,UAAC,KAAD,0BACa,0BAAOC,SAbFH,EADtB,KAmBF,SAAC,KAAD,CAAUU,KAAK,SAASC,QAASjC,EAAAA,EAAjC,UACE,SAAC,KAAD,UAIJ,SAAC,IAAD,CACEkC,MAAO,MACPzB,QAASA,EACT0B,YAAaxC,EAAAA,EACbyC,KAAM,IACN,aAAW,kBACX,cAAY,aAInB,C,6NC/EYC,EAAoBC,EAAAA,GAAAA,GAAH,sHAOjBC,EAAgBD,EAAAA,GAAAA,GAAH,2YAqBbE,EAAeF,EAAAA,GAAAA,IAAH,8EAMZG,EAAiBH,EAAAA,GAAAA,EAAH,yKAWdI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,2EAKZM,EAAWN,EAAAA,GAAAA,OAAH,4gB,iKCpDRO,EAAU,mCACVC,EAAW,6BAEXnB,EAAa,kCAEboB,EAAmB,mCAAG,+GAERC,MAAM,GAAD,OACvBF,EADuB,yCACkBD,IAHf,cAEzBI,EAFyB,OAKzBC,EAAOD,EAASE,OALS,kBAMxBD,GANwB,gCAQ/BE,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBzC,EAAc,mCAAG,WAAOP,EAASiD,GAAhB,4EACxBL,EAAW,CAAC,EADY,SAGb,KAATK,EAHsB,gCAIPN,MAAM,GAAD,OACjBF,EADiB,oBACGzC,EADH,oBACsBwC,IALpB,OAIxBI,EAJwB,+CAQPD,MAAM,GAAD,OACjBF,EADiB,oBACGzC,EADH,YACciD,EADd,oBAC8BT,IAT5B,QAQxBI,EARwB,sBAapBC,EAAOD,EAASE,OAbI,kBAcnBD,GAdmB,kCAgB1BE,QAAQC,IAAR,MAhB0B,0DAAH,wDAoBdE,EAAgB,mCAAG,WAAMC,GAAN,kGAELR,MAAM,GAAD,OArCE,4CAqCF,oBACOH,EADP,kBACwBW,IAHxB,cAEtBP,EAFsB,OAMtBC,EAAOD,EAASE,OANM,kBAOrBD,GAPqB,gCAS5BE,QAAQC,IAAR,MAT4B,yDAAH,qD","sources":["constants/loadSpinner.js","constants/upToTop.js","pages/MovieCast/MovieCast.js","pages/MovieCast/MovieCast.styled.js","services/themoviedbApi.js"],"sourcesContent":["export const override = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n","export const upToTop = () => {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n};\n","import { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nimport { fetchMovieInfo } from 'services/themoviedbApi';\nimport { IMAGE_PATH } from 'services/themoviedbApi';\nimport { Box } from 'components/Box/Box';\nimport actorPlaceholder from '../../images/actor-placeholder.jpg';\nimport { override } from 'constants/loadSpinner';\nimport { UpButton, UpButtonIcon } from './MovieCast.styled';\nimport { upToTop } from 'constants/upToTop';\n\nimport {\n  MovieCastList,\n  MovieDetailsTitle,\n  MovieCastImg,\n  MovieActorData,\n} from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const [movieId] = useOutletContext();\n  const [movieCredits, setMovieCredits] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchMovieInfo(movieId, 'credits').then(setMovieCredits);\n  }, [movieId]);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      window.scrollTo({\n        top: 600,\n        left: 0,\n        behavior: 'smooth',\n      });\n      setLoading(false);\n    }, 300);\n  }, [movieCredits]);\n\n  if (!movieCredits) return;\n\n  return (\n    <>\n      <MovieDetailsTitle>Cast</MovieDetailsTitle>\n      <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\" gridGap={20} bg=\"#202021\">\n        {movieCredits.cast.map(\n          ({ id, profile_path, original_name, character }) => (\n            <MovieCastList key={id}>\n              {profile_path ? (\n                <MovieCastImg\n                  src={IMAGE_PATH + profile_path}\n                  alt={original_name}\n                  width={120}\n                  height={200}\n                />\n              ) : (\n                <MovieCastImg src={actorPlaceholder} alt={original_name} />\n              )}\n              <MovieActorData>{original_name}</MovieActorData>\n              <MovieActorData>\n                Character: <span>{character}</span>\n              </MovieActorData>\n            </MovieCastList>\n          )\n        )}\n        <UpButton type=\"button\" onClick={upToTop}>\n          <UpButtonIcon />\n        </UpButton>\n      </Box>\n\n      <ScaleLoader\n        color={'red'}\n        loading={loading}\n        cssOverride={override}\n        size={500}\n        aria-label=\"Loading Spinner\"\n        data-testid=\"loader\"\n      />\n    </>\n  );\n};\n\nexport default MovieCast;\n","import styled from 'styled-components';\nimport { AiFillBackward } from 'react-icons/ai';\nexport const MovieDetailsTitle = styled.h2`\n  color: white;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const MovieCastList = styled.li`\n  margin: 0;\n  padding: 0;\n  max-width: 120px;\n  color: white;\n\n  list-style: none;\n  width: 150px;\n  background-color: #d4cedf4a;\n  gap: 20px;\n  border-radius: 4px;\n  overflow: hidden;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n    box-shadow: 23px -36px 55px -17px rgba(255, 107, 8, 0.76);\n  }\n`;\n\nexport const MovieCastImg = styled.img`\n  margin: 0;\n  object-fit: cover;\n  height: 200px;\n`;\n\nexport const MovieActorData = styled.p`\n  padding: 5px 5px;\n  font-size: 15px;\n  font-weight: 700;\n  text-align: center;\n  span {\n    font-size: 12px;\n    font-weight: 400;\n  }\n`;\n\nexport const UpButtonIcon = styled(AiFillBackward)`\n  rotate: 90deg;\n  width: 40px;\n  height: 40px;\n`;\nexport const UpButton = styled.button`\n  position: fixed;\n  bottom: 2%;\n  right: 5%;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: red;\n  transition: shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n      rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n    color: white;\n  }\n`;\n","export const API_KEY = '62f46feb65c2319fb0db62c2c080ca35';\nexport const BASE_URL = 'https://api.themoviedb.org';\nexport const FETCH_BY_NAME_PATH = 'https://api.themoviedb.org/3/search/movie';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieInfo = async (movieId, info) => {\n  let response = {};\n  try {\n    if (info === '') {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n    } else {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}/${info}?api_key=${API_KEY}`\n      );\n    }\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const response = await fetch(\n      `${FETCH_BY_NAME_PATH}?api_key=${API_KEY}&query=${query}`\n    );\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["override","position","top","left","transform","upToTop","window","scrollTo","behavior","useOutletContext","movieId","useState","movieCredits","setMovieCredits","loading","setLoading","useEffect","fetchMovieInfo","then","setTimeout","as","display","flexWrap","gridGap","bg","cast","map","id","profile_path","original_name","character","src","IMAGE_PATH","alt","width","height","actorPlaceholder","type","onClick","color","cssOverride","size","MovieDetailsTitle","styled","MovieCastList","MovieCastImg","MovieActorData","UpButtonIcon","AiFillBackward","UpButton","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","data","json","console","log","info","fetchMovieByName","query"],"sourceRoot":""}