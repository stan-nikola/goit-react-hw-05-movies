{"version":3,"file":"static/js/820.f5d654a6.chunk.js","mappings":"+QAEaA,EAAoBC,EAAAA,GAAAA,GAAH,sHAOjBC,EAAgBD,EAAAA,GAAAA,GAAH,2YAqBbE,EAAeF,EAAAA,GAAAA,IAAH,8EAMZG,EAAiBH,EAAAA,GAAAA,EAAH,wK,8IClCdI,E,QAAmBJ,GAAAA,GAAH,+E,SCsC7B,EAjCqB,WACnB,OAAkBK,EAAAA,EAAAA,MAAXC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAQA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,EAAS,WAAWM,MAAK,SAAAC,GAAI,OAC1CJ,EAAgBI,EAAKC,QADqB,GAG7C,GAAE,CAACR,IAECE,EAEL,OACE,iCACE,SAAC,KAAD,uBACA,SAACO,EAAA,EAAD,CAAKC,GAAG,KAAKC,MAAM,QAAnB,SACGT,EAAaU,OAAS,EACrBV,EAAaW,KAAI,SAAAC,GAAM,OACrB,UAAChB,EAAD,YACE,oCAAYgB,EAAOC,WACnB,uBAAID,EAAOE,YAFUF,EAAOG,GADT,KAOvB,SAAC,KAAD,4DAOT,C,iKCtCYC,EAAU,mCACVC,EAAW,6BAEXC,EAAa,kCAEbC,EAAmB,mCAAG,+GAERC,MAAM,GAAD,OACvBH,EADuB,yCACkBD,IAHf,cAEzBK,EAFyB,OAKzBC,EAAOD,EAASE,OALS,kBAMxBD,GANwB,gCAQ/BE,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBtB,EAAc,mCAAG,WAAOL,EAAS4B,GAAhB,4EACxBL,EAAW,CAAC,EADY,SAGb,KAATK,EAHsB,gCAIPN,MAAM,GAAD,OACjBH,EADiB,oBACGnB,EADH,oBACsBkB,IALpB,OAIxBK,EAJwB,+CAQPD,MAAM,GAAD,OACjBH,EADiB,oBACGnB,EADH,YACc4B,EADd,oBAC8BV,IAT5B,QAQxBK,EARwB,sBAapBC,EAAOD,EAASE,OAbI,kBAcnBD,GAdmB,kCAgB1BE,QAAQC,IAAR,MAhB0B,0DAAH,wDAoBdE,EAAgB,mCAAG,WAAMC,GAAN,kGAELR,MAAM,GAAD,OArCE,4CAqCF,oBACOJ,EADP,kBACwBY,IAHxB,cAEtBP,EAFsB,OAMtBC,EAAOD,EAASE,OANM,kBAOrBD,GAPqB,gCAS5BE,QAAQC,IAAR,MAT4B,yDAAH,qD","sources":["pages/MovieCast/MovieCast.styled.js","pages/MovieReviews/MovieReviews.styled.js","pages/MovieReviews/MovieReviews.js","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsTitle = styled.h2`\n  color: white;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const MovieCastList = styled.li`\n  margin: 0;\n  padding: 0;\n  max-width: 120px;\n  color: white;\n\n  list-style: none;\n  width: 150px;\n  background-color: #d4cedf4a;\n  gap: 20px;\n  border-radius: 4px;\n  overflow: hidden;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n    box-shadow: 23px -36px 55px -17px rgba(255, 107, 8, 0.76);\n  }\n`;\n\nexport const MovieCastImg = styled.img`\n  margin: 0;\n  object-fit: cover;\n  height: 200px;\n`;\n\nexport const MovieActorData = styled.p`\n  padding: 5px 5px;\n  font-size: 15px;\n  font-weight: 700;\n  text-align: center;\n  span {\n    font-size: 12px;\n    font-weight: 400;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieReviewsItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { fetchMovieInfo } from 'services/themoviedbApi';\nimport { MovieDetailsTitle } from '../MovieCast/MovieCast.styled';\nimport { Box } from '@mui/system';\nimport { MovieReviewsItem } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const [movieId] = useOutletContext();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieInfo(movieId, 'reviews').then(resp =>\n      setMovieReviews(resp.results)\n    );\n  }, [movieId]);\n\n  if (!movieReviews) return;\n\n  return (\n    <>\n      <MovieDetailsTitle>Reviews</MovieDetailsTitle>\n      <Box as=\"ul\" color=\"white\">\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => (\n            <MovieReviewsItem key={review.id}>\n              <h3>Author:{review.author}</h3>\n              <p>{review.content}</p>\n            </MovieReviewsItem>\n          ))\n        ) : (\n          <MovieDetailsTitle>\n            We don't have any reviews for this movie.\n          </MovieDetailsTitle>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","export const API_KEY = '62f46feb65c2319fb0db62c2c080ca35';\nexport const BASE_URL = 'https://api.themoviedb.org';\nexport const FETCH_BY_NAME_PATH = 'https://api.themoviedb.org/3/search/movie';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieInfo = async (movieId, info) => {\n  let response = {};\n  try {\n    if (info === '') {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n    } else {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}/${info}?api_key=${API_KEY}`\n      );\n    }\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const response = await fetch(\n      `${FETCH_BY_NAME_PATH}?api_key=${API_KEY}&query=${query}`\n    );\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["MovieDetailsTitle","styled","MovieCastList","MovieCastImg","MovieActorData","MovieReviewsItem","useOutletContext","movieId","useState","movieReviews","setMovieReviews","useEffect","fetchMovieInfo","then","resp","results","Box","as","color","length","map","review","author","content","id","API_KEY","BASE_URL","IMAGE_PATH","fetchTrendingMovies","fetch","response","data","json","console","log","info","fetchMovieByName","query"],"sourceRoot":""}