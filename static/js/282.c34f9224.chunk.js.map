{"version":3,"file":"static/js/282.c34f9224.chunk.js","mappings":"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","sources":["constants/loadSpinner.js","pages/AboutMovie/AboutMovie.styled.js","pages/AboutMovie/AboutMovie.js","services/themoviedbApi.js"],"sourcesContent":["export const override = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: 700;\n  padding: 5px 10px;\n  width: 114px;\n  height: 30px;\n  background-color: white;\n  border-radius: 4px;\n  text-decoration: none;\n  background-color: red;\n\n  margin-bottom: 15px;\n\n  color: black;\n  transition: shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n  span {\n    margin-right: 5px;\n    svg {\n      width: 40px;\n      height: 40px;\n    }\n  }\n  &:hover,\n  &:focus {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n      rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n    background-color: red;\n    color: white;\n  }\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const MovieUserScore = styled.p`\n  margin-bottom: 20px;\n  span {\n    margin-right: 8px;\n  }\n`;\nexport const MovieDetailsTitle = styled.h3`\n  margin-bottom: 15px;\n`;\nexport const MovieDetailsData = styled.p`\n  margin-bottom: 40px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { AiFillBackward } from 'react-icons/ai';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\nimport {\n  GoBackLink,\n  MovieName,\n  MovieUserScore,\n  MovieDetailsTitle,\n  MovieDetailsData,\n} from './AboutMovie.styled';\nimport { StyledLink } from './../../components/AppBar/AppBar.styled';\nimport { fetchMovieInfo } from 'services/themoviedbApi';\nimport { Box } from 'components/Box/Box';\nimport { IMAGE_PATH } from 'services/themoviedbApi';\nimport { override } from 'constants/loadSpinner';\n\nconst AboutMovie = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movieData, setMovieData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n\n\n  useEffect(() => {\n    fetchMovieInfo(movieId, '').then(setMovieData);\n    window.scrollTo({\n      top: 0,\n    });\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieData;\n\n  if (!release_date) return;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <GoBackLink to={backLinkHref}>\n        <span>\n          <AiFillBackward />\n        </span>\n        Go back\n      </GoBackLink>\n      <Box display=\"flex\" color=\"white\" justifyContent=\"center\" mb={30}>\n        <img\n          onLoad={() => setLoading(false)}\n          src={IMAGE_PATH + poster_path}\n          alt={original_title}\n          width={300}\n        />\n        <Box ml={30} maxWidth={500}>\n          <MovieName>\n            {original_title + `(${new Date(release_date).getFullYear()})`}\n          </MovieName>\n          <MovieUserScore>\n            <span>User score:</span>\n            {Math.round(vote_average * 10)}%\n          </MovieUserScore>\n          <MovieDetailsTitle>Overview</MovieDetailsTitle>\n          <MovieDetailsData>{overview}</MovieDetailsData>\n          <MovieDetailsTitle>Genres</MovieDetailsTitle>\n          <MovieDetailsData>\n            {genres.map(genre => genre.name).join(', ')}\n          </MovieDetailsData>\n          <Box>\n            <MovieDetailsTitle>Additional information</MovieDetailsTitle>\n            <Box display=\"flex\">\n              <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </StyledLink>\n              <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </StyledLink>\n            </Box>\n          </Box>\n        </Box>\n        <ScaleLoader\n          color={'red'}\n          loading={loading}\n          cssOverride={override}\n          size={500}\n          aria-label=\"Loading Spinner\"\n          data-testid=\"loader\"\n        />\n      </Box>\n      <Suspense fallback={null}>\n        <Outlet context={[movieId]} />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default AboutMovie;\n","export const API_KEY = '62f46feb65c2319fb0db62c2c080ca35';\nexport const BASE_URL = 'https://api.themoviedb.org';\nexport const FETCH_BY_NAME_PATH = 'https://api.themoviedb.org/3/search/movie';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieInfo = async (movieId, info) => {\n  let response = {};\n  try {\n    if (info === '') {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n    } else {\n      response = await fetch(\n        `${BASE_URL}/3/movie/${movieId}/${info}?api_key=${API_KEY}`\n      );\n    }\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const response = await fetch(\n      `${FETCH_BY_NAME_PATH}?api_key=${API_KEY}&query=${query}`\n    );\n\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["override","position","top","left","transform","GoBackLink","styled","Link","MovieName","MovieUserScore","MovieDetailsTitle","MovieDetailsData","movieId","useParams","location","useLocation","useState","movieData","setMovieData","loading","setLoading","backLinkHref","state","from","useEffect","fetchMovieInfo","then","window","scrollTo","poster_path","original_title","release_date","vote_average","overview","genres","Box","display","flexDirection","to","color","justifyContent","mb","onLoad","src","IMAGE_PATH","alt","width","ml","maxWidth","Date","getFullYear","Math","round","map","genre","name","join","cssOverride","size","Suspense","fallback","context","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","data","json","console","log","info","fetchMovieByName","query"],"sourceRoot":""}